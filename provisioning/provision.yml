---
- hosts: all
  accelerate: false
  sudo: yes
  gather_facts: false
  vars_files:
      - vars_common.yml

  tasks:
      # XXX ignore in final version?
      - name: configure apt-cache
        apt: pkg=squid-deb-proxy-client update_cache=yes cache_valid_time=3600
            state=present

      - name: start zeroconf service
        service: name=avahi-daemon state=started

      - name: upgrade base system
        apt: upgrade=safe update_cache=yes
        notify: 
        - rebuild vmware guest additions

      - name: install core system, networking, and python packages
        apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
            state=present
        with_items: system_packages

      - name: install python system packages
        easy_install: name={{item}}
        with_items: python_packages

      - name: install virtualenv
        pip: name=virtualenv version=1.10

      # ansible cannot be easy_install'ed
      - name: install ansible
        pip: name=ansible

      #
      # setup development steelscript directories and templates
      #
      - name: steelscript root directory
        file: path={{ project_root_stage }}
            state=directory mode=775
            owner={{ project_owner_stage }} group={{ project_group_stage }}

      - name: steelscript app framework directory
        file: path={{ project_root_stage }}/{{ project_name }}
            state=directory mode=775
            owner={{ project_owner_stage }} group={{ project_group_stage }}
        register: portal_dir_result

      - name: steelscript tools directory
        file: path=/steelscript/tools
            state=directory mode=775
            owner=root group=root

      #
      # setup enviroment for aliases, helper functions, and ipython notebooks
      #
      - name: steelscript helper functions and aliases
        template: src=templates/vm_env.sh
            dest={{ project_root_stage }}/tools/vm_env.sh
            mode=775
            owner=root group=root

      - name: update bashrc to source vm_env.sh
        lineinfile:
            dest=/home/vagrant/.bashrc
            line="source {{ project_root_stage }}/tools/vm_env.sh"
            regexp="^source {{ project_root_stage }}/tools/vm_env.sh"
            insertafter=EOF
            state=present

      - name: ipython notebook folder
        file: path=/home/vagrant/ipython_notebooks
            state=directory mode=775
            owner=vagrant group=vagrant

      #
      # setup deployment steelscript directories
      #
      - name: steelscript wsgi directory
        file: path={{ project_root_stage }}/wsgi
            state=directory mode=775
            owner={{ project_owner_deploy }} group={{ project_group_deploy }}

      - name: steelscript home directory
        file: path={{ project_root_stage }}/wsgi/.steelscript
            state=directory mode=775
            owner={{ project_owner_deploy }} group={{ project_group_deploy }}

      - name: steelscript app fraemwork initial_data directory
        file: path={{ project_root_stage }}/wsgi/initial_data
            state=directory mode=775
            owner={{ project_owner_deploy }} group={{ project_group_deploy }}

      - name: steelscript app fraemwork datacache directory
        file: path={{ project_root_stage }}/wsgi/datacache
            state=directory mode=775
            owner={{ project_owner_deploy }} group={{ project_group_deploy }}
      #
      # setup apache config
      #
      - name: add vagrant user to apache group
        user:
            name=vagrant
            groups='www-data'
            append=yes

      - name: set apache umask to 002
        lineinfile:
            dest=/etc/apache2/envvars
            line="umask 002"
            regexp="^umask 002"
            insertafter=EOF
            state=present

      - name: flyscript site template
        template: src=templates/steelscript_appfwk_site.j2
            dest=/etc/apache2/sites-available/steelscript_appfwk_site
            mode=664
            owner={{ project_owner_stage }} group={{ project_group_stage }}
        notify:
        - restart apache

      - name: enable flyscript site
        file: path=/etc/apache2/sites-enabled/001-steelscript_appfwk
            src=/etc/apache2/sites-available/steelscript_appfwk_site
            state=link
            mode=664
            owner={{ project_owner_stage }} group={{ project_group_stage }}
        notify:
        - restart apache

      - name: disable default site
        file: path=/etc/apache2/sites-enabled/000-default state=absent

      - name: install portal wsgi configuration
        template: src=templates/steelscript_appfwk.wsgi
            dest={{ project_root_stage }}/wsgi/steelscript_appfwk.wsgi
            mode=664
            owner={{ project_owner_stage }} group={{ project_group_stage }}
        notify:
        - restart apache


      #
      # setup mysql database
      #
      - name: Change root user password on first run
        mysql_user: login_user=root
                    login_password=''
                    name=root
                    password={{ mysql_root_password }}
                    priv=*.*:ALL,GRANT
                    host={{ item }}
        with_items:
          - $ansible_hostname
          - 127.0.0.1
          - ::1
          - localhost
        ignore_errors: true

      - name: Add App Framework Database
        mysql_db: name={{ mysql_django_db }}
                  state=present
                  login_user=root
                  login_password={{ mysql_root_password }}

      - name: Add App Framework django user
        mysql_user: name={{ mysql_django_user }}
                    password={{ mysql_django_password }}
                    priv={{ mysql_django_db }}.*:ALL,GRANT
                    host={{ item }}
                    login_user=root
                    login_password={{ mysql_root_password }}
        with_items:
          - $ansible_hostname
          - 127.0.0.1
          - ::1
          - localhost
        #ignore_errors: true


      - meta: flush_handlers

  handlers:
      - include: handlers.yml

- include: stage.yml reset=true
